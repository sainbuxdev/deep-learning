# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g2F6vkB58P1obnHelE-3tSHEhsMnjLBA
"""

import pandas as pd
data = pd.read_csv("wdbc.data", delimiter=',', header=None)
data

y = data[1]
x = data.drop(columns=[1])

import sklearn
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

labelencoder = LabelEncoder()
y = labelencoder.fit_transform(y)

train_x , test_x, train_y, test_y = train_test_split(x, y, test_size=0.8, random_state = 0)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
train_x = sc.fit_transform(train_x)
test_x = sc.fit_transform(test_x)

import keras
from keras.models import Sequential
from keras.layers import Dense

model = Sequential()

model.add(Dense(16, activation='relu', input_dim = 31))
model.add(Dense(16,activation='relu'))
model.add(Dense(1, activation='sigmoid',input_dim=31))
model.compile(optimizer='Adam', loss='binary_crossentropy', metrics=['accuracy'])



output = model.fit(train_x, train_y, batch_size=32, epochs=10)

y_pred = model.predict(test_x)
y_pred = (y_pred > 0.5)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(test_y, y_pred)
accuracy_score(test_y,y_pred)

import matplotlib.pyplot as plt

plt.plot(output.history['accuracy'])
plt.plot(output.history['loss'])
plt.show()

